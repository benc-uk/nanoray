syntax = "proto3";

import "google/protobuf/duration.proto";
option go_package = "raynet/pkg/proto";

service Worker {
  rpc Ping(Void) returns (Void);
  rpc NewJob(JobRequest) returns (Void);
}

service Controller {
  rpc GetScene(SceneRequest) returns (SceneResult);
  rpc RegisterWorker(WorkerInfo) returns (Void);
  rpc JobComplete(JobResult) returns (Void);

  // Used by frontend 
  rpc GetWorkers(Void) returns (WorkerList);
  rpc StartRender(Void) returns (Void);
  rpc GetProgress(Void) returns (Progress);
}

message JobRequest {
  int32 id = 2;
  string sceneId = 1;
  ImageDetails imageDetails = 9;
  int32  x = 3;      // Offset position X of this job in the image
  int32  y = 4;      // Offset position Y of this job in the image
  int32  width = 5;  // Width of the image for this job not the whole image
  int32  height = 6; // Height of the image of this job not the whole image

  int32  samplesPerPixel = 7; // Number of samples per pixel
  int32  chunkSize = 8;       // Number of pixels to render at once for speed
}

message ImageDetails {
  int32 width = 1;
  int32 height = 2;
  double aspectRatio = 3;
}

message JobResult {
  bytes imageData = 3;
  google.protobuf.Duration timeTaken = 4;
  WorkerInfo worker = 5;
  JobRequest job = 6;
}

message WorkerInfo {
  string id = 1;
  string host = 2;
  int32  port = 3;
  int32  index = 4;
  int32  maxJobs = 5;
}

message WorkerList {
  repeated WorkerInfo workers = 1;
}

message SceneRequest {
  string id = 1;
}

message SceneResult {
  string data = 1;
}

message Void {}

message Progress {
  int32 totalJobs = 1;
  int32 completedJobs = 2;
}